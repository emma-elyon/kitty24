// --- New project ---

init_new_project() {
	set_high_resolution(0, 24, 320, 6)
}

deinit_new_project() {
	// No, we need the project name for the editor unless we can fetch the
	// current directory
	// deallocate(project_name, 64)
	set_low_resolution(0, 24, 320, 6)
}

draw_new_project() {
	text("Project name?", (320 >> 1) - (6 * 13 >> 1), 12)
	text2("You can change this at any time.", (320 >> 1) - (3 * 32 >> 1), 24)
	
	let length = [project_name]:3 + 1
	rectangle_fill((320 >> 1) - (length * 6 >> 1), 180 + 12 >> 1, length * 6, 2, frame >> 1)
	text_sized(project_name, (320 >> 1) - ((length - 1) * 6 >> 1), 180 - 12 >> 1)
}

key_down_new_project(key) {
	if key == KEY_BACKSPACE {
		let length = [project_name]:3
		if length > 0 {
			[project_name]:3 = length - 1
		}
	} else if key == KEY_RETURN {
		io(WRITE_DIR, project_name + 3, [project_name]:3)
		io(CHANGE_DIR, project_name + 3, [project_name]:3)
		io(OPEN, "main.kitty.script", 17)
		let exists_buffer = allocate(1)
		let length = io(READ, exists_buffer, 1)
		if length == 0 {
			io(WRITE, "main() {\n\tloop {}\n}", 22 - 3)
		}
		deallocate(exists_buffer)
		set_state(STATE_EDITOR)
	}
}

text_input_new_project(character) {
	let length = [project_name]:3
	[project_name]:3 = length + 1
	[project_name + length + 3] = character
}